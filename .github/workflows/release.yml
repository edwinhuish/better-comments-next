name: Package and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
      exists: ${{ steps.checkTag.outputs.exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read package.json INFO
        id: info
        uses: jaywcjlove/github-action-package@main
      
      - run: echo "version - ${{ steps.info.outputs.version }}"

      - name: Check if tag exist
        id: checkTag
        uses: mukunku/tag-exists-action@v1.6.0
        if: steps.info.outputs.version != ''
        with:
          tag: "v${{steps.info.outputs.version}}"

      - run: echo "exists - ${{ steps.checkTag.outputs.exists }}"

  work:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.exists == 'false'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      # - name: Generate extension package
      #   run: npx vsce package

      # - name: Publish extension to vscode
      #   run: npx vsce publish
      #   env:
      #     VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish extension to Open VSX
        run: npx ovsx publish
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{needs.check.outputs.version}}"
          files: "*.vsix"

